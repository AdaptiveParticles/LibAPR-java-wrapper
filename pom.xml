<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.scijava</groupId>
        <artifactId>pom-scijava</artifactId>
        <version>22.3.0</version>
    </parent>

    <name>Java wrapper for LibAPR</name>
    <groupId>mosaic</groupId>
    <artifactId>libapr-java-wrapper</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <repositories>
        <repository>
            <id>imagej.public</id>
            <url>http://maven.imagej.net/content/groups/public</url>
        </repository>
    </repositories>

    <properties>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>

        <javacpp.cppbuild.skip>false</javacpp.cppbuild.skip> <!-- To skip execution of cppbuild.sh: -Djavacpp.cppbuild.skip=true -->
        <javacpp.parser.skip>true</javacpp.parser.skip>     <!-- To skip header file parsing phase: -Djavacpp.parser.skip=true  -->
        <javacpp.compiler.skip>false</javacpp.compiler.skip> <!-- To skip native compilation phase: -Djavacpp.compiler.skip=true -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>javacpp</artifactId>
            <version>1.4.1</version>
        </dependency>
        <dependency>
            <groupId>sc.fiji</groupId>
            <artifactId>bigdataviewer-vistools</artifactId>
            <version>1.0.0-beta-11</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
	    <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>net.imagej</groupId>
            <artifactId>imagej</artifactId>
        </dependency>
        <dependency>
            <groupId>net.imagej</groupId>
            <artifactId>imagej-legacy</artifactId>
        </dependency>
    </dependencies>

    <build>
        <!-- Detect platform: ${os.detected.classifier} -->
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.5.0.Final</version>
            </extension>
        </extensions>

        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse 
                    m2e settings only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>

                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>exec-maven-plugin</artifactId>
                                        <versionRange>[1.5.0,)</versionRange>
                                        <goals>
                                            <goal>exec</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute />
                                    </action>
                                </pluginExecution>

                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.bytedeco</groupId>
                                        <artifactId>javacpp</artifactId>
                                        <versionRange>[1,)</versionRange>
                                        <goals>
                                            <goal>build</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute />
                                    </action>
                                </pluginExecution>

                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Execute cppbuild.sh to build libraries -->
            <plugin>
                <artifactId>exec-maven-plugin</artifactId>
                <groupId>org.codehaus.mojo</groupId>
                <executions>
                    <execution>
                        <id>cppbuild</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${javacpp.cppbuild.skip}</skip>
                            <executable>bash</executable>
                            <commandlineArgs>${project.basedir}/native/cppbuild.sh</commandlineArgs>
                            <workingDirectory>${project.basedir}/native</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>enforce-no-snapshots</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- Use JavaCpp to create wrappers to native libraries -->
            <plugin>
                <groupId>org.bytedeco</groupId>
                <artifactId>javacpp</artifactId>
                <version>1.4.1</version>
                <configuration>
                    <classPath>${project.build.outputDirectory}</classPath>
                    <includePaths>
                        <includePath>${project.build.sourceDirectory}</includePath>
                        <includePath>${basedir}/native/LibAPR/src/</includePath>
                        <includePath>${basedir}/native/LibAPR/build/</includePath>
                    </includePaths>
                    <linkPaths>
                        <linkPath>${basedir}/native/LibAPR/build/</linkPath>
                        <!-- <linkPath>/usr/local/Cellar/hdf5/1.10.2_1/lib/</linkPath> -->
                    </linkPaths>
                    <copyLibs>true</copyLibs>
                    <compilerOptions>
                        <compilerOption>-std=c++14</compilerOption>
                    </compilerOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>javacpp.parser</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <skip>${javacpp.parser.skip}</skip>
                            <outputDirectory>${project.build.sourceDirectory}</outputDirectory>
                            <classOrPackageName>mosaic.presets.AprLibConfig</classOrPackageName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>process-classes</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <skip>${javacpp.compiler.skip}</skip>
                            <classOrPackageNames>
                                <classOrPackageName>mosaic.JavaAPR</classOrPackageName>
                                <classOrPackageName>mosaic.LibApr</classOrPackageName>
                            </classOrPackageNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
